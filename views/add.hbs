<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <script src="https://api-maps.yandex.ru/v3/?apikey=9bfd234f-56de-4b04-8d59-5e5d3a5b9c87&lang=ru_RU" type="text/javascript"></script>
    <title>Document</title>
</head>
<body>
    <p>
        <label>
            Тип:
            <select id="type-select">
                <option value="repair">Починить</option>
                <option value="deliver">Доставить</option>
                <option value="help">Помощь</option>
            </select>
        </label>
    </p>
    <p>
        <label>
            Описание:
            <input type="text" id="description">
        </label>
    </p>
    <p>
        <label>
            Адрес:
            <input type="text" id="input-address">
        </label>
    </p>
    <div id="app"></div>
    <p>
        <button type="submit" id="setButton">Установить</button>
    </p>
</body>
<script>
    window.map = null;

    let mainCoordinates = [53.694955, 54.600708];
    let mainPlaceMark = null;
    async function main() {
        await ymaps3.ready;

        const { YMap, YMapDefaultSchemeLayer, YMapDefaultFeaturesLayer, YMapListener } = ymaps3;

        map = new YMap(document.getElementById('app'), {
            location: { center: mainCoordinates, zoom: 15.05 },
        });

        map.addChild(new YMapDefaultSchemeLayer());
        map.addChild(new YMapDefaultFeaturesLayer());

        const el = document.createElement('img');
        el.className = 'request-marker';
        el.src = `/public/help.svg`;
        mainPlaceMark = new ymaps3.YMapMarker({ coordinates: mainCoordinates }, el);
        map.addChild(mainPlaceMark);

        const mapListener = new YMapListener({
            layer: 'any',
            onActionStart: ({type}) => {
                if (type === 'drag') {
                    mainPlaceMark.update({ coordinates: map })
                }
            },
            onActionEnd: ({type}) => {
                if (type === 'drag') {
                    mainPlaceMark.update({ coordinates: map })
                }
            }
        });
        map.addChild(mapListener);
    }

    main();

    const inputAddress = document.getElementById('input-address');
    inputAddress.onkeydown = (async ev => {
        if (ev.code === "Enter" && inputAddress.value) {
            const result = await ymaps3.search({ text: inputAddress.value, limit: 1 });
            const coordinates = result[0]?.geometry?.coordinates;
            map.update({ location: { center: coordinates, zoom: 15, duration: 400 }});
            mainPlaceMark.update({ coordinates });
        }
    });

    const setButton = document.getElementById('setButton');
    setButton.onclick = () => {
        fetch('/request', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json;charset=utf-8'
            },
            body: JSON.stringify({
                request_type: document.getElementById('type-select').value,
                coordinates: mainPlaceMark.coordinates?.length ? mainPlaceMark.coordinates : mainPlaceMark.coordinates.center,
                description: document.getElementById('description').value,
            })
        }).then(async res => {
            let data = await res.json();
            if (res.ok) {
                console.log(res);
            } else {
                console.log('err');
            }
        });
    }
</script>
<style>
    #app {
        width: 320px;
        height: 240px;
        font-family: 'Yandex Sans Text', Arial, Helvetica, sans-serif;
    }

    .request-marker {
        position: relative;
        box-sizing: border-box;
        transform: translate(-50%,calc(-50% - 24px));
        cursor: pointer;
    }
</style>
</html>
